<!--
  ~ /*
  ~
  ~ Copyright 2019 Werner Punz
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining
  ~ a copy of this software and associated documentation files (the "Software"),
  ~ to deal in the Software without restriction, including without limitation
  ~ the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the Software
  ~ is furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  ~ INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  ~ PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  ~ HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  ~ OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  ~ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ~ */
  -->

<templateSet group="Tiny Decorations">
  <template name="tstdimp" value="import {Component, Inject, Input, Output, Both, Func, Controller, Filter, extended, Injectable} from &quot;TinyDecorations&quot;;&#10;import * as angular from &quot;angular&quot;;&#10;import IScope = angular.IScope;&#10;import Rest = extended.Rest;&#10;import Restable = extended.Restable;&#10;" description="Tiny Decorations standard import" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tinj" value="@Inject(&quot;$NAME$&quot;) " description="Tiny decorations inject" toReformat="false" toShortenFQNames="true">
    <!--
    <variable name="NAME" expression="complete()" defaultValue="" alwaysStopAt="true" />
    -->
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tcinj" value="@Inject(&quot;$NAME$&quot;) " description="Tiny decorations inject and name pasted from the clipboard value" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="clipboard()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tcserv_inj" value="@Inject($NAME$)" description="typesave service injection from clipboard" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="clipboard()" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tcinj_full" value="@Inject(&quot;$NAME$&quot;) private $NAME2$: $NAME$" description="Tiny decorations inject and name pasted from the clipboard value - full inject" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="clipboard()" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME2" expression="" defaultValue="decapitalize(clipboard())" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tcserv_inj_full" value="@Inject($NAME$) private $NAME2$: $NAME$" description="typesave service injection from clipboard - full inject" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="clipboard()" alwaysStopAt="true" />
    <variable name="NAME2" expression="" defaultValue="decapitalize(clipboard())" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ttpl" value="`$TPL_STRING$`" description="multiline template" toReformat="false" toShortenFQNames="true">
    <variable name="TPL_STRING" expression="complete()" defaultValue="Fill your template in here" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
    <context>
      <option name="TINY_DECS" value="true" />
    </context>
  </template>
</templateSet>